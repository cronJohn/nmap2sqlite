// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: ports.sql

package sqlc

import (
	"context"
)

const insertExtraPortsReason = `-- name: InsertExtraPortsReason :exec
INSERT INTO extra_ports_reasons (
    extra_port_id, reason, count, proto, ports
) VALUES (?, ?, ?, ?, ?)
`

type InsertExtraPortsReasonParams struct {
	ExtraPortID int64  `json:"extra_port_id"`
	Reason      string `json:"reason"`
	Count       int64  `json:"count"`
	Proto       string `json:"proto"`
	Ports       string `json:"ports"`
}

func (q *Queries) InsertExtraPortsReason(ctx context.Context, arg InsertExtraPortsReasonParams) error {
	_, err := q.db.ExecContext(ctx, insertExtraPortsReason,
		arg.ExtraPortID,
		arg.Reason,
		arg.Count,
		arg.Proto,
		arg.Ports,
	)
	return err
}

const insertPortScriptElement = `-- name: InsertPortScriptElement :exec
INSERT INTO port_script_elements (
    port_script_id, key, value
) VALUES (?, ?, ?)
`

type InsertPortScriptElementParams struct {
	PortScriptID int64  `json:"port_script_id"`
	Key          string `json:"key"`
	Value        string `json:"value"`
}

func (q *Queries) InsertPortScriptElement(ctx context.Context, arg InsertPortScriptElementParams) error {
	_, err := q.db.ExecContext(ctx, insertPortScriptElement, arg.PortScriptID, arg.Key, arg.Value)
	return err
}

const insertPortServiceCpe = `-- name: InsertPortServiceCpe :exec
INSERT INTO port_service_cpes (
    port_id, cpe
) VALUES (?, ?)
`

type InsertPortServiceCpeParams struct {
	PortID int64  `json:"port_id"`
	Cpe    string `json:"cpe"`
}

func (q *Queries) InsertPortServiceCpe(ctx context.Context, arg InsertPortServiceCpeParams) error {
	_, err := q.db.ExecContext(ctx, insertPortServiceCpe, arg.PortID, arg.Cpe)
	return err
}
