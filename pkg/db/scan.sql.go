// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: scan.sql

package sqlc

import (
	"context"
	"database/sql"
)

const updateDebuggingInfo = `-- name: UpdateDebuggingInfo :exec
UPDATE scans
SET debugging_level = ?
WHERE id = ?
`

type UpdateDebuggingInfoParams struct {
	DebuggingLevel sql.NullInt64 `json:"debugging_level"`
	ID             int64         `json:"id"`
}

func (q *Queries) UpdateDebuggingInfo(ctx context.Context, arg UpdateDebuggingInfoParams) error {
	_, err := q.db.ExecContext(ctx, updateDebuggingInfo, arg.DebuggingLevel, arg.ID)
	return err
}

const updateRunstatsInfo = `-- name: UpdateRunstatsInfo :exec
UPDATE scans
SET runstats_time = ?, runstats_time_str = ?, runstats_elapsed = ?, runstats_summary = ?, runstats_exit = ?, runstats_err = ?, 
hosts_up = ?, hosts_down = ?, hosts_total = ?
WHERE id = ?
`

type UpdateRunstatsInfoParams struct {
	RunstatsTime    sql.NullInt64   `json:"runstats_time"`
	RunstatsTimeStr sql.NullString  `json:"runstats_time_str"`
	RunstatsElapsed sql.NullFloat64 `json:"runstats_elapsed"`
	RunstatsSummary sql.NullString  `json:"runstats_summary"`
	RunstatsExit    sql.NullString  `json:"runstats_exit"`
	RunstatsErr     sql.NullString  `json:"runstats_err"`
	HostsUp         sql.NullInt64   `json:"hosts_up"`
	HostsDown       sql.NullInt64   `json:"hosts_down"`
	HostsTotal      sql.NullInt64   `json:"hosts_total"`
	ID              int64           `json:"id"`
}

func (q *Queries) UpdateRunstatsInfo(ctx context.Context, arg UpdateRunstatsInfoParams) error {
	_, err := q.db.ExecContext(ctx, updateRunstatsInfo,
		arg.RunstatsTime,
		arg.RunstatsTimeStr,
		arg.RunstatsElapsed,
		arg.RunstatsSummary,
		arg.RunstatsExit,
		arg.RunstatsErr,
		arg.HostsUp,
		arg.HostsDown,
		arg.HostsTotal,
		arg.ID,
	)
	return err
}

const updateScanInfo = `-- name: UpdateScanInfo :exec
UPDATE scans
SET scan_info_type = ?, scan_info_protocol = ?, scan_info_num_services = ?, scan_info_services = ?
WHERE id = ?
`

type UpdateScanInfoParams struct {
	ScanInfoType        sql.NullString `json:"scan_info_type"`
	ScanInfoProtocol    sql.NullString `json:"scan_info_protocol"`
	ScanInfoNumServices sql.NullInt64  `json:"scan_info_num_services"`
	ScanInfoServices    sql.NullString `json:"scan_info_services"`
	ID                  int64          `json:"id"`
}

func (q *Queries) UpdateScanInfo(ctx context.Context, arg UpdateScanInfoParams) error {
	_, err := q.db.ExecContext(ctx, updateScanInfo,
		arg.ScanInfoType,
		arg.ScanInfoProtocol,
		arg.ScanInfoNumServices,
		arg.ScanInfoServices,
		arg.ID,
	)
	return err
}

const updateVerboseInfo = `-- name: UpdateVerboseInfo :exec
UPDATE scans
SET verbose_level = ?
WHERE id = ?
`

type UpdateVerboseInfoParams struct {
	VerboseLevel sql.NullInt64 `json:"verbose_level"`
	ID           int64         `json:"id"`
}

func (q *Queries) UpdateVerboseInfo(ctx context.Context, arg UpdateVerboseInfoParams) error {
	_, err := q.db.ExecContext(ctx, updateVerboseInfo, arg.VerboseLevel, arg.ID)
	return err
}
